{"changed":true,"filter":false,"title":"Trickle.js","tooltip":"/js/Trickle.js","value":"/*\nTrickle - create global filters using knockout, bootstrap and chosen\nauthored by Ron Roth(ronrothjr@gmail.com)\n\nvar filter = new Trickle({\n  id: 'FiltersDiv',\n  current: window.currentFilter,\n  title: 'Trickle Filters',           //optional\n  url: '/Filters/UpdateFilters',      //optional\n  all: 'All',                         //optional\n  hidden: true,                       //optional\n  persistTrigger: 'FiltersPersisted', //optional\n  model: {                            //optional\n    displayFilters: window.includeFilters,\n  },\n  filters: {\n    'order': {\n      display: 'displayFilters',\n      property: 'OrderNumber',\n      label: 'Order Number',\n      type: 'select',\n      selectOptions: {\n        isOptionsDictionary: true,\n        allowAll: true,\n        sortOptions: true,\n        bindings: {\n          options: window.availableItems,\n          chosen: { width: '300px' },\n          optionsValue: 'id',\n          optionsText: 'text',\n          selectedOptions: window.selectedItems\n        }\n      }\n    }\n  }\n}); \n*/\n\n(function(d, w, $, _) {\n  var Trickle = function(options) {\n    var trickle = {\n      id: null,\n      current: null,\n      title: null,\n      model: {},\n      changed: {},\n      persistTrigger: 'FiltersPersisted',\n      all: '--All--',\n      hidden: true,\n      initialized: false,\n      \n      init: function(options) {\n        if (!this.validateOptions(options))\n          return false;\n        _.assign(this, options);\n        this.current = this.current || {};\n        _.bindAll(this);\n        return true;\n      },\n      \n      emit: function() {\n        this.write();\n        this.bind();\n        this.original = JSON.stringify(this.current);\n        return {\n          get: this.getProp,\n          set: this.setProp,\n          reset: this.resetFilters,\n          apply: this.applyFilters,\n          model: this.model\n        };\n      },\n      \n      validateOptions: function(options) {\n        if (!options) {\n          console.log('Trickle: no filter options');\n          return false;\n        }\n        if (!options.id) {\n          var $test = $('.trickle');\n          if ($test.length === 1) {\n            this.selector = '.trickle';\n          } else if ($test.length === 0) {\n            console.log('Trickle: no element id or div with class=\"trickle\"');\n            return false;\n          } else if ($test.length > 1) {\n            console.log('Trickle: multiple divs with trickle class assigned');\n            return false;\n          }\n        } else\n          this.selector = '#'+options.id;\n        if (!options.filters) {\n          console.log('Trickle: no filters');\n          return false;\n        }\n        return true;\n      },\n      \n      write: function () {\n        (this.$view = $(this.selector)).append(this.html('view'));\n        this.$button = this.$view.find('.filter_button');\n        this.$labels = this.$view.find('.filter_labels');\n        this.$content = this.$view.find('.filter_content');\n        _.each(this.filters, _.bind(this.normalizeFilter, this));\n        _.each(this.filters, _.bind(this.writeFilter, this));\n        this.$content.append(this.html('apply'));\n        this.$view.show();\n      },\n      \n      writeFilter: function (filter, key, filters) {\n        filter.value = _.isFunction(filter.value) ? filter.value() : filter.value;\n        _.each(filter.property, _.bind(function(property){\n          this.model['current_'+key+'_'+property.replace(/\\./g,'_')] = ko.observable();\n        }, this));\n        this.model[filter.id+'_display'] = ko.observable(filter.display);\n        this.model[filter.id+'_display_label'] = ko.observable(filter.display);\n        if (this.hidden)\n          this.$labels.append(($(this.html('labelcontainer', filter)))\n            .append(($(this.html('label', filter)))));\n        var bindings = this.addBindings(filter, key, filters);\n        this.$content.append(($(this.html('filtercontainer', filter)))\n          .append(($(this.html('filter', filter)))\n            .append(this.html(filter.type,\n              _.assign(filter,{\n                filter: filter,\n                bindings: bindings\n              }))+this.html('validation',filter))));\n      },\n      \n      normalizeFilter: function (filter, key) {\n        filter.id = key;\n        filter.error = filter.error || 'Invalid '+(\n          _.isUndefined(filter.label) ? filter.id :\n            _.isArray(filter.label) ? filter.label.join(', ') : filter.label);\n        filter.display = _.isUndefined(filter.display) ? \n          true :\n          _.isBoolean(this.model[filter.display]) ?\n            this.model[filter.display] :\n            true;\n        if (filter.property) {\n          if (_.isString(filter.property))\n            filter.property = [filter.property];\n          if (_.isString(filter.label)) {\n            var obj = {};\n            obj[filter.property[0]] = filter.label;\n            filter.label = obj;\n          }\n          filter.value = this.getDescendantProp(filter.property, this.current);\n        }\n        filter.value = _.isFunction(filter.value) ? filter.value() : filter.value;\n      },\n      \n      addBindings: function (filter, key, filters) {\n        this.filter = filter;\n        this.databind = '';\n        if (filter.type === 'daterange')\n          this.addDateRange(key,filter.property); \n        else if (filter.type === 'listbuilder') {\n          this.addListBuilder(filter);\n        }\n        else\n          _.each(filter.property, _.bind(function (property){\n            this.model[key+'_value_'+property.replace(/\\./g,'_')] = \n              ko.observable();\n            this.model[key+'_invalid'] = \n              ko.observable(false);\n          }, this));\n        if (filter.type === 'checkbox') {\n          _.each(filter.property, _.bind(function (property){\n            this.model[key+'_value_'+property.replace(/\\./g,'_')]\n              .subscribe(_.bind(function (val) {\n                var valid = false;\n                _.each(filter.property, _.bind(function (property){\n                  if (this.model[key+'_value_'+property.replace(/\\./g,'_')]())\n                    valid = true;\n                }, this));\n                this.model[key+'_invalid'](!valid);\n              }, this));\n          }, this));\n        }\n        if (filter.selectOptions) {\n          this.databind += this.html('bindings',{\n            key: key, \n            property: filter.property, \n            type: filter.type,\n            selectedOptions: \n              filter.selectOptions.bindings.selectedOptions\n          });\n          _.each(filter.selectOptions.bindings, this.addBinding);\n        }\n        if (filter.cascade && filter.cascade.child && \n        filters[filter.cascade.child]){\n          this.addCascadeFunction({\n            filter: filter, \n            child: filters[filter.cascade.child]\n          });\n          this.databind += ', event: { change: '+filter.id+'_cascade }';\n        }\n        return this.databind;\n      },\n      \n      addBinding: function (binding, key) {\n        var id = this.filter.id + '_' + key;\n        if (_.isString(binding)){\n          this.model[id] = ko.observable(binding);\n          this.databind += ','+key+': \\''+binding+'\\'';\n        } else {\n          if (_.isFunction(binding))\n            binding = binding();\n          if (_.isArray(binding))\n            this.model[id] = ko.observableArray(binding);\n          else\n            this.model[id] = ko.observable(binding);\n          this.databind += ',' + key + ': ' + id;\n        }\n      },\n      \n      getDescendantProp: function (prop, obj) {\n        prop = _.isArray(prop) ? prop : [prop];\n        var values = {};\n        _.each(prop, _.bind(function (p) {\n          var val = this.getDescendant(p, obj);\n          values[p.replace(/\\./g,'_')] = \n            _.isFunction(val) ? val() : val;\n        }, this));\n        return values;\n      },\n      \n      getDescendant: function (prop, obj) {\n        var a = _.isArray(prop) ? prop : prop.split(\".\");\n        if (a.length === 1)\n          return this.getDescendantIfExistsElseEmpty(a[0], obj);\n        else if (a.length > 1)\n          return this.getDescendant(a, \n            this.getDescendantIfExistsElseEmpty(a.shift(), obj));\n      },\n      \n      getDescendantIfExistsElseEmpty: function (prop, obj) {\n        if (!obj[prop])\n          obj[prop] = '';\n        return obj[prop];\n      },\n      \n      setDescendantProp: function (obj, prop, val) {\n        var a = _.isArray(prop) ? prop : prop.split(\".\");\n        if (a.length === 1)\n          obj[a[0]] = val;\n        else if (a.length > 1)\n          this.setDescendantProp(obj[a.shift()], a, val);\n      },\n      \n      bind: function () {\n        this.model.all = ko.observable(this.all);\n        (this.model.slide = this.slide)();\n        this.model.applyFilters = this.applyFilters;\n        this.model.resetFilters = this.resetFilters;\n        console.log('Trickle',this.model);\n        ko.applyBindings(this.model,this.$view[0]);\n        this.applyCurrent();\n      },\n      \n      slide: function () {\n        if (this.hidden && this.$button && this.$content) {\n          this.$content.slideToggle('fast');\n          _.delay(this.setContentOverflow, 500);\n        }\n      },\n      \n      setContentOverflow: function () {\n        this.$content.css('overflow', 'visible');\n      },\n      \n      getProp: function (prop) {\n        if (prop)\n          return this.getDescendantProp(prop, this.current)[prop];\n        else\n          return _.cloneDeep(this.current);\n      },\n      \n      setProp: function (prop, val) {\n        if (_.isObject(prop) && _.isUndefined(val))\n          _.assign(this.current, prop);\n        else if (_.isString(prop) && !_.isUndefined(val))\n          this.setDescendantProp(this.current, prop, val);\n        this.initialized = false;\n        this.applyCurrent();\n      },\n      \n      resetFilters: function(filters) {\n        this.initialized = false;\n        if (filters && _.isObject(filters))\n          _.assign(this.current, filters);\n        else\n          this.current = JSON.parse(this.original);\n        this.applyCurrent();\n      },\n      \n      applyFilters: function () {\n        this.changed = {};\n        this.PersistLocalOnly = false;\n        _.each(this.filters, this.applyFilter);\n        this.persistFilters();\n        if (this.$content.is(':visible'))\n          this.model.slide();\n      },\n      \n      applyFilter: function (filter, key){\n        this.filter = filter;\n        this.key = key;\n        _.each(this.filters[key].property, \n          this.applyFilterValue);\n        \n      },\n      \n      getFilterValue: function(key, property) {\n        var filter = this.filters[key];\n        var val,\n            id = key+'_'+\n              (filter.type === 'multiple' ? \n                'selectedOptions' : \n                'value_'+property.replace(/\\./g,'_')),\n            original = this.getDescendantProp(property, this.current)\n              [property.replace(/\\./g,'_')];\n        if (filter.type==='daterange')\n          val = this.getDateRangeValues(id, key);\n        else {\n          var invalid = this.model[key+'_invalid'];\n          if (_.isUndefined(invalid) || !invalid())\n            val = this.model[id]();\n          else\n            val = original;\n        }\n        return { value: val, original: original };\n      },\n      \n      applyFilterValue: function (property){\n        var val = this.getFilterValue(this.key, property),\n            changed = _.isObject(val.value) ? \n              !_.isEqual(val.value,val.original) : \n              val.value != val.original;\n        if (changed)\n          this.changed[this.filter.id] = true;\n        this.setDescendantProp(this.current, property, val.value);\n      },\n      \n      persistFilters: function () {\n        if (this.url)\n          $.ajax({\n            url: this.url,\n            type: 'PUT',\n            dataType: 'json',\n            data: JSON.stringify(this.current),\n            contentType: 'application/json; charset=utf-8',\n            success: this.persistFiltersSuccess\n          });\n        else\n          this.persistFiltersSuccess({ \n              message: 'success', \n              data: this.current\n            });\n      },\n      \n      persistFiltersSuccess: function (response) {\n        this.applyCurrent();\n        _.each(this.filters, _.bind(function(filter, key){\n          if (this.changed[key]) {\n            if (filter.onChanged)\n              $.event.trigger(filter.onChanged, this.current);\n            if (Object.keys(this.changed).length === 1 && filter.onPersistLocalOnly) {\n              $.event.trigger(filter.onPersistLocalOnly, this.current);\n              this.PersistLocalOnly = true;\n            }\n          }\n        }, this));\n        if (!this.PersistLocalOnly && this.persistTrigger)\n          $.event.trigger(this.persistTrigger, \n            { \n              message: response.message, \n              data: response.data\n            }\n          );\n      },\n      \n      applyCurrent: function () {\n        _.each(this.filters, this.applyCurrentFilter);\n        this.initialized = true;\n      },\n      \n      applyCurrentFilter: function (filter, key){\n        this.val = null;\n        this.filter = filter;\n        this.key = key;\n        _.each(filter.property,this.applyCurrentValue);\n        if (this.hidden)\n          this.model[this.key+'_display_label']\n            (this.val !== this.all);\n      },\n      \n      applyCurrentValue: function (property) {\n        this.val = this.getDescendantProp(property, this.current)\n          [property.replace(/\\./g,'_')];\n        var id = this.key+'_value_'+property.replace(/\\./g,'_');\n        if (!this.initialized) {\n          if (this.filter.type === 'daterange') {\n            this.model[id + '_dateRangeBegin'](this.val.Begin);\n            this.model[id + '_dateRangeEnd'](this.val.End);\n          }\n          else \n            this.model[id](this.val);\n          if (this.filter.type === 'multiple')\n            this.model[this.key+'_selectedOptions'](this.val);\n        }\n        if (this.filter.type === 'daterange') {\n          this.val = this.getDateRangeValues(id, this.key);\n          this.val = !this.val.Begin || !this.val.End ? \n            this.all : \n            new Date(this.val.Begin).format('m/d/yy') + ' - ' +\n            new Date(this.val.End).format('m/d/yy');\n        }\n        if (this.filter.type === 'select')\n          if (this.model[this.key+'_optionsValue'])\n            this.val = this.getOptionText(this.key, this.val);\n        if (this.filter.type === 'multiple') {\n          this.val = this.model[this.key+'_selectedOptions']();\n          this.val = this.val.length===0 ? \n            this.all : this.val.length + ' selected';\n        }\n        if (this.filter.type === 'checkbox')\n          this.val = this.val ? 'Yes' : 'No';\n        if (this.filter.type === 'listbuilder') {\n          this.val = this.model[id]();\n          this.val = this.val.length===0 ? \n            this.all : this.val.length + ' selected';\n        }\n        this.model\n          ['current_'+this.key+'_'+property.replace(/\\./g,'_')]\n            (this.val);\n      },\n      \n      getOptionText: function (key, val) {\n        var Value = this.model[key+'_optionsValue'](),\n            Text = this.model[key+'_optionsText'](),\n            item = this.model[key+'_options']()\n                    .filter(_.bind(function(item){\n                      return item[Value] == String(val);\n                    }, this));\n        return item ? item[0][Text] : '';\n      },\n      \n      addCascadeFunction: function (options) {\n        var config = this.setCascadeConfig(options);\n        this.model[config._parent.id+'_cascade'] = _.bind(function (e) {\n          _.delay(_.bind(function (){\n            this.val = this.model[config.koParent]();\n            this.cascadeValue = config.bindings.optionsValue;\n            this.cascadeText = config.bindings.optionsText;\n            this.opts = ko.observableArray();\n            this.cascadeOptions = config.options[this.val] || config.options;\n            _.each(this.cascadeOptions, this.addCascadeOption, this);\n            if (config._child.selectOptions.sortOptions)\n              this.opts.sort(this.sortCascadeOptions);\n            if (config._child.selectOptions.allowAll) {\n              var opt = {};\n              opt[this.cascadeValue] = config.all || this.all;\n              opt[this.cascadeText] = config.all || this.all;\n              this.opts.unshift(opt);\n            }\n            this.model[config.koChild](this.opts()[0][this.cascadeValue]);\n            this.model[config._child.id+'_options'](this.opts());\n          }, this), 1);\n        }, this);\n        _.delay(_.bind(function (){\n          this.model[config._parent.id+'_cascade']();\n        }, this), 1);\n      },\n      \n      setCascadeConfig: function(config) {\n        return config.filter ?\n          {\n            _parent: config.filter,\n            koParent: config.filter.id+'_value_'+config.filter.property,\n            _child: config.child,\n            koChild: config.child.id+'_value_'+config.child.property,\n            bindings: config.child.selectOptions.bindings,\n            options: config.filter.cascade.options,\n            all: config.all || this.all\n          } : \n          {\n            _parent: {id: config.key+'_'+config.name},\n            koParent: config.key+'_'+config.name+'_value',\n            _child: {\n              id: config.key+'_'+config.parm.cascade.child,\n              selectOptions: {sortOptions: true, allowAll: true}\n            },\n            koChild: config.key+'_'+config.parm.cascade.child+'_value',\n            bindings: {optionsValue: 'id', optionsText: 'text'},\n            options: config.parm.cascade.options,\n            all: config.all || this.all\n          };\n      },\n      \n      addCascadeOption: function(option, key) {\n        this.key = key;\n        if (this.val === this.all){\n          _.each(option, this.setCascadeOptionAll);\n        }else{\n          this.opt = {};\n          this.key = key;\n          if (_.isObject(option)) {\n            this.opt[this.cascadeValue] = Object.keys(option)[0];\n            this.opt[this.cascadeText] = option[Object.keys(option)[0]];\n          } else {\n            this.opt[this.cascadeValue] = key;\n            this.opt[this.cascadeText] = option;\n          }\n          this.opts.push(this.opt);\n        }\n      },\n      \n      setCascadeOptionAll: function(option2, key2){\n        this.opt = {};\n        this.opt[this.cascadeValue] = key2;\n        this.opt[this.cascadeText] = option2 + ' - ' + this.key;\n        this.opts.push(this.opt);\n      },\n      \n      sortCascadeOptions: function (i1, i2) {\n        var prop = this.cascadeText;\n        return i1[prop] < i2[prop] ? -1 : i1[prop] == i2[prop] ? 0 : 1;\n      },\n      \n      addDateRange: function (key, property) {\n        var id = key+'_value_'+property[0].replace(/\\./g,'_');\n        this.model[id+'_dateRangeBegin'] = ko.observable();\n        this.model[id+'_dateRangeEnd'] = ko.observable();\n        this.addDateRangeValidation(key, property);\n        this.addDateRangeSubscriptions(key, property);\n      },\n      \n      addDateRangeValidation: function (key, property) {\n        var id = key+'_value_'+property[0].replace(/\\./g,'_');\n        this.model[key+'_invalid'] = ko.observable(false);\n        this.model[id+'_dateRangeValidation'] = \n          _.bind(function (startDate, endDate) {\n            var koInvalidDates = this.model[key+'_invalid'],\n                //Strip out the time portion if it exists.\n                local_startDate = startDate === '' || startDate === null ?\n                  null : \n                  /T/.test(startDate) ? \n                    startDate.substring(0, startDate.indexOf('T')) : \n                    startDate,\n                local_endDate = endDate === '' || endDate === null ? \n                  null : \n                  /T/.test(endDate) ? \n                    endDate.substring(0, endDate.indexOf('T')) : \n                    endDate;\n            if (local_startDate && local_endDate) {\n              if (local_startDate > local_endDate)\n                koInvalidDates(true);\n              else\n                koInvalidDates(false);\n            } else\n              koInvalidDates(local_startDate || local_endDate);\n          }, this);\n      },\n      \n      addDateRangeSubscriptions: function (key, property) {\n        var id = key+'_value_'+property[0].replace(/\\./g,'_');\n        this.model[id + '_dateRangeBegin']\n          .subscribe(_.bind(function (val) {\n            if (this.model[id + '_dateBegin_stopTimeout'])\n              clearTimeout(this.model[id + '_dateBegin_stopTimeout']);\n            this.model[id + '_dateBegin_stopTimeout'] =\n              setTimeout(_.bind(function () {\n                this.model[id+'_dateRangeValidation']\n                  (val, this.model[id + '_dateRangeEnd']());\n              },this), 100);\n          }, this));\n        this.model[id + '_dateRangeEnd']\n          .subscribe(_.bind(function (val) {\n            if (this.model[id + '_dateEnd_stopTimeout'])\n              clearTimeout(this.model[id + '_dateEnd_stopTimeout']);\n            this.model[id + '_dateEnd_stopTimeout'] = \n              setTimeout(_.bind(function() {\n                this.model[id+'_dateRangeValidation']\n                  (this.model[id + '_dateRangeBegin'](), val);\n              }, this), 100);\n          }, this));\n      },\n      \n      getDateRangeValues: function (id, key) {\n        var begin = this.model[id+'_dateRangeBegin'](),\n            end = this.model[id+'_dateRangeEnd'](),\n            invalid = this.model[key+'_invalid']();\n        val = invalid || !begin || !end ? \n          { Begin: null, End: null } : \n          {\n            Begin: new Date(begin).format('m/d/yy'),\n            End: new Date(end).format('m/d/yy')\n          };\n        return val;\n      },\n      \n      addListBuilder: function (filter) {\n        var self = this,\n            key = filter.id,\n            id = key+'_value_'+filter.property[0].replace(/\\./g,'_'),\n            parameters = filter.parameters,\n            all = 'Any',\n            val = this.getDescendantProp(filter.property, this.current);\n        self.model[id] = koList = ko.observableArray(val[filter.property]);\n        self.model[key+'_invalid'] = ko.observable(false);\n        self.model[key+'_enable_add_button'] = koEnabled = ko.observable(false);\n        self.model[key+'_display_filter_list'] = koDisplay = ko.observable(false);\n        var getItem = function (){\n                var item = {};\n                _.each(parameters, function (parm, name) {\n                  var val = $('.'+key+'_'+name+' option:selected').text();\n                  item[name] = val === all ? '' : val;\n                });\n                return item;\n              },\n            getFormat = function (data){\n                var item = '';\n                _.each(parameters, function (parm, name) {\n                  var val = data[name] === all ? '' : data[name];\n                  item += ( item !== '' && val !== '' ? ', ' : '' ) + val;\n                });\n                return item;\n              },\n            enable = function () {\n                var item = getItem();\n                var format = getFormat(item);\n                var enabled = format !== '' &&\n                    _.filter(koList(), item).length === 0;\n                koEnabled(enabled);\n                koDisplay(koList().length > 0);\n              },\n            addItem = function (){\n                koList.push(getItem());\n              },\n            removeItem = function (data){\n                koList.remove(data);\n              };\n        this.model[id].subscribe(enable);\n        self.model[key+'_addItem'] = addItem;\n        self.model[key+'_removeItem'] = removeItem;\n        self.model[key+'_formatItem'] = getFormat;\n        _.each(filter.parameters, function(parm, name) {\n            self.model[key+'_'+name+'_value'] = ko.observable(all);\n            (self.model[key+'_'+name+'_options'] = \n              ko.observableArray(parm.options))\n                .unshift({id: all, text: all});\n            if (parm.cascade)\n              self.addCascadeFunction({\n                key: key, name: name, parm: parm, all: all\n              });\n            self.model[key+'_'+name+'_changed'] = function(){\n              if (parm.cascade)\n                self.model[key+'_'+name+'_cascade']();\n              enable();\n            };\n          });\n      },\n      \n      html: function (template, data) {\n        return _.template(this.templates[template], data || this);\n      },\n      \n      templates: {\n        view: ' \\n\\\n          <%=title ? \"<h2>\" + title + \"</h2>\" : \"\"%>\\\n          <% if (hidden) {%><button \\n\\\n            class=\"filter_button btn btn-success pull-left\"\\\n            data-bind=\"click: slide\">Filters</button>\\\n          <div class=\"filter_labels\"></div> \\n<% } %>\\\n          <div class=\"filter_content\"></div> \\n',\n        labelcontainer: ' \\n\\\n            <!-- ko if: <%=id%>_display_label() -->\\\n            <div class=\"<%=id%>_label_container label-container pull-left\"></div> \\n\\\n            <!-- /ko -->',\n        filtercontainer: ' \\n\\\n            <!-- ko if: <%=id%>_display() -->\\\n            <div class=\"<%=id%>_container filter-container pull-left\"></div> \\n\\\n            <!-- /ko -->',\n        filter: '  \\n\\\n              <div class=\"<%=id%>_filter filter pull-left\"> \\n\\\n                <% if (!/radio|checkbox/.test(type) && label && label[property]) { %>\\\n                <label for=\"ddl<%=id%>\" class=\"content-label\"> \\n\\\n                <%=label[property]%></label><br/> \\n\\\n              <% } %></div> \\n',\n        label: '  \\n\\\n              <% _.each( property, function(val) { %>\\\n              <div class=\"<%=id%>_label filter-label pull-left\"> \\n\\\n                <label for=\"<%=id%>_<%=val.replace(/\\\\./g,\\'_\\')%>\"> \\\n\t\t\t\t        <%=label[val]%></label><br/> \\n\\\n                <span id=\"lbl<%=id%>_<%=val.replace(/\\\\./g,\\'_\\')%>\" \\n\\\n                  class=\"label label-primary pull-left\" \\n\\\n                data-bind=\"text: current_<%=id%>_<%=val.replace(/\\\\./g,\\'_\\')%>\"/> \\n\\\n              </div> \\n\\\n              <% }) %>',\n        bindings: ' \\n\\\n                  <% if(type!==\\'multiple\\') \\\n                  { %>value: <%=key%>_value_<%=property[0].replace(/\\\\./g,\\'_\\')%><% } \\\n                  else { %>novalue: <%=key%>_selectedOptions<% }%>\\n',\n        validation: ' \\n\\\n                <div class=\"clear-fix\"> \\n\\\n                <div class=\"field-validation-error\" \\\n                  data-bind=\"visible: \\\n                    <%=id%>_invalid\"> \\n\\\n                    <p><%=error%></p> \\n\\\n                </div> \\n',\n        select: ' \\n\\\n                <select id=\"<%=id%>\" data-bind=\" \\n\\\n                  <%=bindings %> \\n\\\n                \"></select> \\n',\n        multiple: ' \\n\\\n                <select id=\"<%=id%>\" \\n\\\n                  multiple=\"multiple\" \\n\\\n                  data-placeholder=\"  --All--\" \\n\\\n\t\t\t\t\t        data-bind=\" \\n\\\n                  <%=bindings %> \\n\\\n                \"></select> \\n',\n        checkbox: ' \\n\\\n                <div class=\"btn-group\" data-toggle=\"buttons\"> \\n\\\n                  <% _.each(options, function (opt, opt_key) { %> \\n\\\n                    <label class=\"btn btn-primary\"> \\n\\\n                      <input type=\"checkbox\" \\n\\\n                        data-bind=\"checkbox: \\n\\\n                        <%=id%>_value_<%=opt_key%>\" \\n\\\n                      /><%=opt%></label> \\n\\\n                  <% }) %>\\n\\\n                </div> \\n',\n        radio: ' \\n\\\n                <div class=\"btn-group form-group\" \\n\\\n                 data-toggle=\"buttons\" \\n\\\n                  data-bind=\"radio: <%=id%>_value_<%=property%>\"> \\n\\\n                  <% _.each(options, function (opt) { %> \\n\\\n                  <label class=\"btn btn-primary\">\\n\\\n                    <input type=\"radio\" name=\"<%=property%>\" \\n\\\n                     value=\"<%=opt%>\"><%=opt%></label> \\n\\\n                  <% }) %>\\n\\\n                </div> \\n',\n        daterange: ' \\n\\\n                <div class=\"pull-left\"> \\n\\\n                  <label class=\"daterange-label\">Begin:</label><br /> \\n\\\n                  <input type=\"date\" data-bind=\"datePicker: \\\n                    <%=id%>_value_<%=property[0].replace(/\\\\./g,\\'_\\')%>_dateRangeBegin\" /> \\n\\\n                </div> \\n\\\n                <div class=\"pull-left\"> \\n\\\n                  <label class=\"daterange-label\">End:</label><br /> \\n\\\n                  <input type=\"date\" data-bind=\"datePicker: \\\n                    <%=id%>_value_<%=property[0].replace(/\\\\./g,\\'_\\')%>_dateRangeEnd\" /> \\n\\\n                </div> \\n',\n        listbuilder: '\\n\\\n                <div class=\"filter_parameters pull-left\"> \\n\\\n        \t\t\t    <% _.each(parameters, function (parm, name) { %> \\n\\\n        \t\t\t    <div class=\"filter_parameter pull-left\"> \\n\\\n        \t\t\t\t    <label for=\"<%=filter.id%>_<%=name%>\"><%=parm.label%>:</label><br /> \\n\\\n        \t\t\t\t    <select class=\"<%=filter.id%>_<%=name%>\" \\n\\\n        \t\t\t\t      data-bind=\"event:{ change: <%=filter.id%>_<%=name%>_changed }, \\n\\\n        \t\t\t\t        value: <%=filter.id%>_<%=name%>_value, \\n\\\n        \t\t\t\t        options: <%=filter.id%>_<%=name%>_options, \\n\\\n        \t\t\t\t        optionsValue: \\'id\\', \\n\\\n        \t\t\t\t\t      optionsText: \\'text\\'\"></select> \\n\\\n        \t\t\t    </div> \\n\\\n                  <% }) %>\\n\\\n        \t\t\t    <div class=\"pull-left\"> \\n\\\n        \t\t\t\t    <input class=\"filter_list_button <%=id%>_addItem_button btn btn-primary\" \\n\\\n        \t\t\t\t      type=\"button\" value=\"Add\" \\n\\\n        \t\t\t\t      data-bind=\"enable: <%=id%>_enable_add_button, \\\n        \t\t\t\t        click: <%=id%>_addItem\" /> \\n\\\n        \t\t\t    </div> \\n\\\n        \t\t    </div> \\n\\\n        \t\t    <div class=\"clear-fix\" data-bind=\"visible: <%=id%>_display_filter_list\"> \\n\\\n      \t\t\t    <div class=\"filter_list\"> \\n\\\n\t\t              <div class=\"filter_list_items\"> \\n\\\n\t\t\t            <!-- ko foreach: <%=id%>_value_<%=property[0].replace(/\\\\./g,\\'_\\')%> --> \\n\\\n\t\t\t              <div class=\"filter_list_item\" \\n\\\n\t\t\t                data-bind=\"text: $root.<%=id%>_formatItem($data), \\n\\\n\t\t\t                click: $root.<%=id%>_removeItem\"></div> \\n\\\n\t\t\t            <!-- /ko --> \\n\\\n      \t\t        </div> \\n\\\n      \t\t      </div> \\n',\n        apply: ' \\n\\\n            <div class=\"clearfix\"></div> \\n\\\n            <button class=\"btn btn-primary\" \\n\\\n              data-bind=\"click: applyFilters\">Apply Filters</button> \\n\\\n            <button class=\"btn btn-primary\" \\n\\\n              data-bind=\"click: resetFilters\">Reset Filters</button>'\n      }\n      \n    };\n    \n    if (trickle.init(options))\n      return trickle.emit();\n    else\n      return null;\n  };\n  w.Trickle = Trickle;\n})(document, window, jQuery, _);","undoManager":{"mark":98,"position":100,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":261,"column":20},"end":{"row":261,"column":21}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":20},"end":{"row":261,"column":21}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":261,"column":16},"end":{"row":261,"column":21}},"text":"isStr"},{"action":"insertText","range":{"start":{"row":261,"column":16},"end":{"row":261,"column":26}},"text":"isString()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":25},"end":{"row":261,"column":26}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":26},"end":{"row":261,"column":27}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":27},"end":{"row":261,"column":28}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":28},"end":{"row":261,"column":29}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":13},"end":{"row":261,"column":14}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":14},"end":{"row":261,"column":15}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":15},"end":{"row":261,"column":16}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":33},"end":{"row":261,"column":34}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":34},"end":{"row":261,"column":35}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":35},"end":{"row":261,"column":36}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":261,"column":35},"end":{"row":261,"column":36}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":261,"column":34},"end":{"row":261,"column":35}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":34},"end":{"row":261,"column":35}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":35},"end":{"row":261,"column":36}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":36},"end":{"row":261,"column":37}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":37},"end":{"row":261,"column":38}},"text":"!"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":261,"column":38},"end":{"row":261,"column":56}},"text":"_.isUndefined(val)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":10},"end":{"row":260,"column":11}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":11},"end":{"row":260,"column":12}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":12},"end":{"row":260,"column":13}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":13},"end":{"row":260,"column":14}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":14},"end":{"row":260,"column":15}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":15},"end":{"row":260,"column":16}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":16},"end":{"row":260,"column":17}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":17},"end":{"row":260,"column":18}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":18},"end":{"row":260,"column":19}},"text":"("}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":31},"end":{"row":260,"column":32}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":260,"column":32},"end":{"row":260,"column":33}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":260,"column":32},"end":{"row":260,"column":33}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":260,"column":37},"end":{"row":260,"column":38}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":289,"column":33},"end":{"row":290,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":290,"column":0},"end":{"row":290,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":8},"end":{"row":290,"column":9}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":9},"end":{"row":290,"column":10}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":10},"end":{"row":290,"column":11}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":11},"end":{"row":290,"column":13}},"text":"()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":12},"end":{"row":290,"column":13}},"text":"f"},{"action":"insertText","range":{"start":{"row":290,"column":13},"end":{"row":290,"column":14}},"text":"i"},{"action":"insertText","range":{"start":{"row":290,"column":14},"end":{"row":290,"column":15}},"text":"l"},{"action":"insertText","range":{"start":{"row":290,"column":15},"end":{"row":290,"column":16}},"text":"t"},{"action":"insertText","range":{"start":{"row":290,"column":16},"end":{"row":290,"column":17}},"text":"e"},{"action":"insertText","range":{"start":{"row":290,"column":17},"end":{"row":290,"column":18}},"text":"r"},{"action":"insertText","range":{"start":{"row":290,"column":18},"end":{"row":290,"column":19}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":20},"end":{"row":291,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":291,"column":0},"end":{"row":291,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":8},"end":{"row":291,"column":10}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":10},"end":{"row":291,"column":11}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":11},"end":{"row":291,"column":12}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":12},"end":{"row":291,"column":13}},"text":"s"},{"action":"insertText","range":{"start":{"row":291,"column":13},"end":{"row":291,"column":14}},"text":"o"},{"action":"insertText","range":{"start":{"row":291,"column":14},"end":{"row":291,"column":15}},"text":"o"},{"action":"insertText","range":{"start":{"row":291,"column":15},"end":{"row":291,"column":16}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":291,"column":15},"end":{"row":291,"column":16}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":291,"column":14},"end":{"row":291,"column":15}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":291,"column":13},"end":{"row":291,"column":14}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":291,"column":12},"end":{"row":291,"column":13}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":12},"end":{"row":291,"column":13}},"text":"a"},{"action":"insertText","range":{"start":{"row":291,"column":13},"end":{"row":291,"column":14}},"text":"s"},{"action":"insertText","range":{"start":{"row":291,"column":14},"end":{"row":291,"column":15}},"text":"s"},{"action":"insertText","range":{"start":{"row":291,"column":15},"end":{"row":291,"column":16}},"text":"i"},{"action":"insertText","range":{"start":{"row":291,"column":16},"end":{"row":291,"column":17}},"text":"g"},{"action":"insertText","range":{"start":{"row":291,"column":17},"end":{"row":291,"column":18}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":18},"end":{"row":291,"column":20}},"text":"()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":19},"end":{"row":291,"column":20}},"text":"t"},{"action":"insertText","range":{"start":{"row":291,"column":20},"end":{"row":291,"column":21}},"text":"h"},{"action":"insertText","range":{"start":{"row":291,"column":21},"end":{"row":291,"column":22}},"text":"i"},{"action":"insertText","range":{"start":{"row":291,"column":22},"end":{"row":291,"column":23}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":23},"end":{"row":291,"column":24}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":24},"end":{"row":291,"column":25}},"text":"c"},{"action":"insertText","range":{"start":{"row":291,"column":25},"end":{"row":291,"column":26}},"text":"u"},{"action":"insertText","range":{"start":{"row":291,"column":26},"end":{"row":291,"column":27}},"text":"r"},{"action":"insertText","range":{"start":{"row":291,"column":27},"end":{"row":291,"column":28}},"text":"r"},{"action":"insertText","range":{"start":{"row":291,"column":28},"end":{"row":291,"column":29}},"text":"e"},{"action":"insertText","range":{"start":{"row":291,"column":29},"end":{"row":291,"column":30}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":30},"end":{"row":291,"column":31}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":31},"end":{"row":291,"column":32}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":32},"end":{"row":291,"column":33}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":33},"end":{"row":291,"column":34}},"text":"f"},{"action":"insertText","range":{"start":{"row":291,"column":34},"end":{"row":291,"column":35}},"text":"i"},{"action":"insertText","range":{"start":{"row":291,"column":35},"end":{"row":291,"column":36}},"text":"l"},{"action":"insertText","range":{"start":{"row":291,"column":36},"end":{"row":291,"column":37}},"text":"e"},{"action":"insertText","range":{"start":{"row":291,"column":37},"end":{"row":291,"column":38}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":291,"column":37},"end":{"row":291,"column":38}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":291,"column":36},"end":{"row":291,"column":37}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":36},"end":{"row":291,"column":37}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":37},"end":{"row":291,"column":38}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":38},"end":{"row":291,"column":39}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":39},"end":{"row":291,"column":40}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":41},"end":{"row":291,"column":42}},"text":";"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":291,"column":42},"end":{"row":292,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":292,"column":0},"end":{"row":292,"column":10}},"text":"          "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":292,"column":8},"end":{"row":292,"column":10}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":292,"column":8},"end":{"row":292,"column":9}},"text":"e"},{"action":"insertText","range":{"start":{"row":292,"column":9},"end":{"row":292,"column":10}},"text":"l"},{"action":"insertText","range":{"start":{"row":292,"column":10},"end":{"row":292,"column":11}},"text":"s"},{"action":"insertText","range":{"start":{"row":292,"column":11},"end":{"row":292,"column":12}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":292,"column":12},"end":{"row":292,"column":13}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":292,"column":12},"end":{"row":292,"column":13}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":293,"column":8},"end":{"row":293,"column":10}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":"l"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":"|"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":"|"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":293,"column":25},"end":{"row":293,"column":26}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":19},"end":{"row":290,"column":20}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":20},"end":{"row":290,"column":21}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":21},"end":{"row":290,"column":22}},"text":"&"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":22},"end":{"row":290,"column":23}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":23},"end":{"row":290,"column":24}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":24},"end":{"row":290,"column":25}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":25},"end":{"row":290,"column":26}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":26},"end":{"row":290,"column":27}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":27},"end":{"row":290,"column":28}},"text":"O"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":28},"end":{"row":290,"column":29}},"text":"b"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":29},"end":{"row":290,"column":30}},"text":"h"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":290,"column":29},"end":{"row":290,"column":30}},"text":"h"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":29},"end":{"row":290,"column":30}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":30},"end":{"row":290,"column":31}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":31},"end":{"row":290,"column":32}},"text":"c"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":32},"end":{"row":290,"column":33}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":33},"end":{"row":290,"column":35}},"text":"()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":290,"column":34},"end":{"row":290,"column":35}},"text":"f"},{"action":"insertText","range":{"start":{"row":290,"column":35},"end":{"row":290,"column":36}},"text":"i"},{"action":"insertText","range":{"start":{"row":290,"column":36},"end":{"row":290,"column":37}},"text":"l"},{"action":"insertText","range":{"start":{"row":290,"column":37},"end":{"row":290,"column":38}},"text":"t"},{"action":"insertText","range":{"start":{"row":290,"column":38},"end":{"row":290,"column":39}},"text":"e"},{"action":"insertText","range":{"start":{"row":290,"column":39},"end":{"row":290,"column":40}},"text":"r"},{"action":"insertText","range":{"start":{"row":290,"column":40},"end":{"row":290,"column":41}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":265,"column":0},"end":{"row":265,"column":7}},"text":"      }"},{"action":"removeLines","range":{"start":{"row":250,"column":0},"end":{"row":265,"column":0}},"nl":"\n","lines":["      ","      getProp: function (prop) {","        if (prop)","          return this.getDescendantProp(prop, this.current)[prop];","        else","          return _.cloneDeep(this.current);","      },","      ","      setProp: function (prop, val) {","        if (_.isObject(prop) && _.isUndefined(val))","          _.assign(this.current, prop);","        else if (_.isString(prop) && !_.isUndefined(val))","          this.setDescendantProp(this.current, prop, val);","        this.initialized = false;","        this.applyCurrent();"]},{"action":"removeText","range":{"start":{"row":249,"column":7},"end":{"row":249,"column":8}},"text":","},{"action":"removeText","range":{"start":{"row":249,"column":7},"end":{"row":250,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":270,"column":7},"end":{"row":270,"column":8}},"text":","},{"action":"insertText","range":{"start":{"row":270,"column":8},"end":{"row":271,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":271,"column":0},"end":{"row":286,"column":0}},"lines":["      ","      getProp: function (prop) {","        if (prop)","          return this.getDescendantProp(prop, this.current)[prop];","        else","          return _.cloneDeep(this.current);","      },","      ","      setProp: function (prop, val) {","        if (_.isObject(prop) && _.isUndefined(val))","          _.assign(this.current, prop);","        else if (_.isString(prop) && !_.isUndefined(val))","          this.setDescendantProp(this.current, prop, val);","        this.initialized = false;","        this.applyCurrent();"]},{"action":"insertText","range":{"start":{"row":286,"column":0},"end":{"row":286,"column":7}},"text":"      }"}]}]]},"ace":{"folds":[],"scrolltop":4590,"scrollleft":0,"selection":{"start":{"row":270,"column":0},"end":{"row":270,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":83,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1416633475638}